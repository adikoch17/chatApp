{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Kocherlakota\\\\Desktop\\\\message\\\\messsage\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport './components/codeIn/CodeIn';\nimport CodeIn from './components/codeIn/CodeIn';\nimport DisplayArea from './components/DisplayArea/DisplayArea';\nimport MakeRoom from './components/make room/MakeRoom';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('/');\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onNameChange = event => {\n      console.log(this.state.input);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onMessageChange = event => {\n      this.setState({\n        message: event.target.value\n      });\n      console.log(this.state.message);\n    };\n\n    this.onSubmit = () => {\n      if (this.state.input) {\n        this.setState({\n          route: this.state.route + 1,\n          name: this.state.input\n        });\n      }\n    };\n\n    this.onSend = () => {\n      if (this.state.message) {\n        socket.emit('chatMessage', {\n          \"name\": this.state.name,\n          \"messageSent\": this.state.message\n        });\n      }\n    };\n\n    this.onRoomChange = event => {\n      this.setState({\n        room: event.target.value\n      });\n    };\n\n    this.onEnter = () => {\n      const postBody = {\n        room: this.state.room\n      };\n      const requestMetadata = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postBody)\n      };\n      fetch('/join', requestMetadata).then(resp => resp.json()).then(status => {\n        if (status === \"YES\") {\n          socket.emit('room', this.state.room);\n          this.setState({\n            route: this.state.route + 1\n          });\n        } else {\n          console.log(\"failed to enter room\");\n        }\n      });\n    };\n\n    this.onCreate = () => {\n      const postBody = {\n        room: this.state.room\n      };\n      const requestMetadata = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postBody)\n      };\n      fetch('/create'.requestMetadata).then(resp => resp.json()).then(status => {\n        if (status === \"YES\") {\n          socket.emit('room', this.state.room);\n          this.setState({\n            route: this.state.route + 1\n          });\n        } else {\n          console.log(\"room already exists\");\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      input: '',\n      messageList: [],\n      message: '',\n      route: 0,\n      room: ''\n    };\n  }\n\n  componentDidMount() {\n    const socket = io.connect('/');\n    socket.on('chatMessage', data => {\n      this.setState({\n        messageList: this.state.messageList.concat(data)\n      });\n      console.log(this.state.messageList);\n    });\n  }\n\n  render() {\n    if (this.state.route === 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(CodeIn, {\n          onSubmit: this.onSubmit,\n          onNameChange: this.onNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MakeRoom, {\n          onRoomChange: this.onRoomChange,\n          onEnter: this.onEnter,\n          onCreate: this.onCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(DisplayArea, {\n          onMessageChange: this.onMessageChange,\n          messageList: this.state.messageList,\n          onSend: this.onSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Aditya Kocherlakota/Desktop/message/messsage/src/App.js"],"names":["React","CodeIn","DisplayArea","MakeRoom","io","socket","connect","App","Component","constructor","onNameChange","event","console","log","state","input","setState","target","value","onMessageChange","message","onSubmit","route","name","onSend","emit","onRoomChange","room","onEnter","postBody","requestMetadata","method","headers","body","JSON","stringify","fetch","then","resp","json","status","onCreate","messageList","componentDidMount","on","data","concat","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './components/codeIn/CodeIn'\nimport CodeIn from './components/codeIn/CodeIn';\nimport DisplayArea from './components/DisplayArea/DisplayArea'\nimport MakeRoom from './components/make room/MakeRoom'\nimport io from \"socket.io-client\";\n\nconst socket = io.connect('/');\n\nclass App extends React.Component {\n  constructor(){\n    \n    super();\n    this.state = {\n      name:'',\n      input:'',\n      messageList:[],\n      message:'',\n      route:0,\n      room:''\n    }\n  }\n\n  componentDidMount(){\n\n    const socket = io.connect('/');\n    socket.on('chatMessage', data =>{\n\n      this.setState({messageList : this.state.messageList.concat(data)})\n      console.log(this.state.messageList);\n    })\n\n  }\n\n\n  onNameChange = (event) =>{\n    console.log(this.state.input);\n    this.setState({input:event.target.value});\n    \n  }\n\n\n  onMessageChange = (event) =>{\n    this.setState({message:event.target.value});\n    console.log(this.state.message)\n  }\n\n  onSubmit = () =>{\n\n    if(this.state.input){\n      this.setState({\n        route:this.state.route+1,\n        name:this.state.input\n      })\n    }\n  }\n\n  onSend = () =>{\n    if(this.state.message){\n      socket.emit('chatMessage',{\"name\":this.state.name,\"messageSent\":this.state.message})\n    }\n  }\n\n  onRoomChange = (event) =>{\n    this.setState({room:event.target.value})\n  }\n\n  onEnter = () =>{\n\n    const postBody = {\n      room:this.state.room\n    }\n\n    const requestMetadata = {\n      method: 'GET',\n      headers: {\n          'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody)\n      };\n\n    fetch('/join', requestMetadata)\n      .then(resp => resp.json())\n      .then(status =>{\n        if(status===\"YES\"){\n          socket.emit('room',this.state.room);\n          this.setState({route:this.state.route+1})\n        }\n        else{\n          console.log(\"failed to enter room\")\n        }\n      });\n\n  }\n\n  onCreate = () =>{\n\n    const postBody = {\n      room:this.state.room\n    }\n\n    const requestMetadata = {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(postBody)\n    };\n\n    fetch('/create'.requestMetadata)\n    .then(resp =>resp.json())\n    .then(status =>{\n      if(status === \"YES\"){\n        socket.emit('room',this.state.room)\n        this.setState({route:this.state.route+1})\n      }\n      else{\n        console.log(\"room already exists\");\n      }\n    });\n\n\n  }\n\n  \n\n  render(){\n    if(this.state.route===2){\n      return(\n        <div className = \"App\">\n        <CodeIn onSubmit={this.onSubmit} onNameChange = {this.onNameChange}/>\n        <MakeRoom onRoomChange={this.onRoomChange} onEnter={this.onEnter} onCreate={this.onCreate}/>\n      </div>\n      )\n    }\n    else{\n      return(\n        <div className=\"App\">\n          <DisplayArea  onMessageChange={this.onMessageChange}  messageList={this.state.messageList} onSend={this.onSend}/>\n          \n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}